# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - main
pr:
  branches:
    exclude:
      - main 

pool:
  vmImage: ubuntu-latest

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: TestAndBuild
  displayName: Test and Build React Application
  jobs:
  - job: Test
    displayName: Run Tests
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run test
      displayName: 'Install Dependencies and Run Tests'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '**/junit.xml'
        testResultsFormat: 'JUnit'
        failTaskOnFailedTests: true
      displayName: 'Publish Test Results'

  - job: Build
    displayName: Build Application
    dependsOn: Test
    steps:
    - script: |
        npm install
        npm run build
      displayName: 'Build React Application'

- stage: ContaineriseAndPush
  displayName: Containerise and Push Image
  dependsOn: TestAndBuild
  jobs:
  - job: DockerBuild
    displayName: Build and Push Docker Image
    steps:
    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        containerRegistry: 'DockerHub'  
        repository: 'dohunwon/asd-group7-frontend'
        command: buildAndPush
        dockerfile: '**/Dockerfile'
        tags: |
          latest

- stage: DeployIntoAzureVM
  displayName: Deploy the server into Azure VM
  dependsOn: ContaineriseAndPush
  jobs:
  - job: DeployServer
    displayName: Deploy the server Through SSH
    steps:
    - task: SSH@0
      displayName: "SSH into Azure VM"
      inputs:
        sshEndPoint: 'ASD-Group7-Frontend-Server'
        runOptions: inline
        inline: |
          CONTAINER_ID=$(sudo docker ps -q --filter ancestor=dohunwon/asd-group7-frontend:latest)
          if [ "$CONTAINER_ID" ]; then
            sudo docker stop $CONTAINER_ID
            sudo docker rm $CONTAINER_ID
          fi
          sudo docker rmi dohunwon/asd-group7-frontend:latest
          sudo docker pull dohunwon/asd-group7-frontend:latest
          sudo docker run -d -p 80:3000 dohunwon/asd-group7-frontend:latest
      condition: succeededOrFailed()

